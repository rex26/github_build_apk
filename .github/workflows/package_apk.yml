# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
   branches: [ main ]
  schedule:
    - cron: '00 11 * * 1-5'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:


      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # print old version
      - name: print old version
        id: print_old_version
        run: echo '::set-output name=old_version::`grep 'version:' pubspec.yaml | sed 's/version://'`'
      - name: get last commit message
        id: get_last_commit_message
        run: echo "::set-output name=last_commit_message::$(echo `git log -1 --pretty=%B`)"
      - name: check latest commit
        id: should_run
        if: ${{ github.event_name != 'schedule' }}
        #run: test -z $(git rev-list  --after="24 hours"  ${{ github.sha }}) && echo "::set-output name=should_run::false"
        run: test '${{ steps.get_last_commit_message.outputs.last_commit_message }}' = "CI auto increased build number:${{ steps.print_old_version.outputs.old_version }}" && echo "::set-output name=should_run::false"
      # increase flutter build number
      #- run: perl -i -pe 's/^(version:\s+\d+\.\d+\.\d+\+)(\d+)$/$1.($2+${{ github.run_number }})/e' pubspec.yaml
      - run: echo ${{ steps.should_run.outputs.should_run }}
      - name: increase build number and write to file
        if: ${{ steps.should_run.outputs.should_run != 'false' }}
        run: perl -i -pe 's/^(version:\s+\d+\.\d+\.\d+\+)(\d+)$/$1.($2+1)/e' pubspec.yaml
      - name: Get increased flutter version
        id: get_increased_flutter_version
        if: ${{ steps.should_run.outputs.should_run != 'false' }}
        run: echo '::set-output name=new_version::`grep 'version:' pubspec.yaml | sed 's/version://'`'


      
      #- name: Get flutter version
      #  id: get_flutter_version
      #  uses: its404/get-flutter-version@v1.0.0
      #- name: Output flutter version
      #  run: echo 'version_number:' ${{ steps.get_flutter_version.outputs.version_number }} ' build_number:' ${{ steps.get_flutter_version.outputs.build_number }}]
      #- run: echo 'final version:' ${{ steps.get_flutter_version.outputs.build_number }} + ${{ github.run_number }}

      # Runs a single command using the runners shell
      #- name: Run a one-line script
      #  run: echo Hello, world!

      # Runs a set of commands using the runners shell
      #- name: Run a multi-line script
      #  run: |
      #    echo Add other actions to build,
      #    echo test, and deploy your project.
      #- run: flutter doctor
      #- run: flutter pub get
      
      #- name: Output Run ID
      #  run: echo ${{ github.run_id }}
      #- name: Output Run Number
      #  run: echo ${{ github.run_number }}
      #- name: Output Run Attempt
      #  run: echo ${{ github.run_attempt }}
        

          
