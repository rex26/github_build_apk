# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  #push:
  # branches: [ main ]
  schedule:
    # 周一到周五每天17:00打包(UTC 11:00)
    - cron: '00 11 * * 1-5'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:


      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: get old version
        id: get_old_version
        run: echo "::set-output name=old_version::$(echo `grep 'version:' pubspec.yaml | sed 's/version://'`)"
      - name: get last commit message
        id: get_last_commit_message
        run: echo "::set-output name=last_commit_message::$(echo `git log -1 --pretty=%B`)"
      - name: check latest commit
        id: should_run
        if: ${{ github.event_name == 'schedule' }}
        #run: test -z $(git rev-list  --after="24 hours"  ${{ github.sha }}) && echo "::set-output name=should_run::false"
        # 如果最后一条提交记录为自动新增版本, 则认为今天没有新commit(也可能是上传失败导致), 不执行打包: should_run = false
        run: test '${{ steps.get_last_commit_message.outputs.last_commit_message }}' = 'CI auto increased build number:${{ steps.get_old_version.outputs.old_version }}' && echo "::set-output name=should_run::false" || echo 'has new commit'
      # increase flutter build number by run number
      #- run: perl -i -pe 's/^(version:\s+\d+\.\d+\.\d+\+)(\d+)$/$1.($2+${{ github.run_number }})/e' pubspec.yaml
      - run: echo ${{ steps.should_run.outputs.should_run }}
      
      - name: increase build number and write to file
        if: ${{ steps.should_run.outputs.should_run != 'false' && github.event_name == 'schedule' }}
        run: perl -i -pe 's/^(version:\s+\d+\.\d+\.\d+\+)(\d+)$/$1.($2+1)/e' pubspec.yaml
      - name: Get increased flutter version
        id: get_increased_flutter_version
        if: ${{ steps.should_run.outputs.should_run != 'false' && github.event_name == 'schedule' }}
        run: echo '::set-output name=new_version::`grep 'version:' pubspec.yaml | sed 's/version://'`'
      - name: Commit auto increased build number
        if: ${{ steps.should_run.outputs.should_run != 'false' && github.event_name == 'schedule' }}
        run: |
          git config --global user.name 'rex26'
          git config --global user.email '858790345@qq.com'
          git add pubspec.yaml
          git commit -m "CI auto increased build number:${{ steps.get_increased_flutter_version.outputs.new_version }}"
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
          git push origin main
          
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '2.10.3'
          channel: 'stable'
          cache: true
          cache-key: flutter # optional, change this to force refresh cache
          cache-path: ${{ runner.tool_cache }}/flutter # optional, change this to specify the cache path
          architecture: x64 # optional, x64 or arm64
      - name: Build APK
        run: flutter build apk
      #- uses: actions/upload-artifact@v1
      #  with:
      #    name: release-apk
      #    path: build/app/outputs/apk/release/app-release.apk
          
      #- name: Get flutter version
      #  id: get_flutter_version
      #  uses: its404/get-flutter-version@v1.0.0
      #- name: Output flutter version
      #  run: echo 'version_number:' ${{ steps.get_flutter_version.outputs.version_number }} ' build_number:' ${{ steps.get_flutter_version.outputs.build_number }}]
      #- run: echo 'final version:' ${{ steps.get_flutter_version.outputs.build_number }} + ${{ github.run_number }}

      # Runs a single command using the runners shell
      #- name: Run a one-line script
      #  run: echo Hello, world!

      # Runs a set of commands using the runners shell
      #- name: Run a multi-line script
      #  run: |
      #    echo Add other actions to build,
      #    echo test, and deploy your project.
      #- run: flutter doctor
      #- run: flutter pub get
      
      #- name: Output Run ID
      #  run: echo ${{ github.run_id }}
      #- name: Output Run Number
      #  run: echo ${{ github.run_number }}
      #- name: Output Run Attempt
      #  run: echo ${{ github.run_attempt }}
        

          
